{"version":3,"sources":["services/people.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","peopleService","getAll","axios","get","then","response","data","create","newPerson","post","update","id","modifiedPerson","put","deletePerson","delete","SuccessNotification","message","className","ErrorNotification","InformationForm","addNewPerson","newName","newPhone","handleNameChange","handlePhoneChange","onSubmit","value","onChange","type","Entry","person","deleteEntry","name","number","onClick","InformationDisplay","people","setPeople","map","filter","window","confirm","Search","handleSearchChange","searchResults","result","App","useState","setNewName","setNewPhone","setSearchResults","successNotification","setSuccessNotification","errorNotification","setErrorNotification","useEffect","allEntries","event","search","target","toLowerCase","includes","preventDefault","length","matchingPerson","find","console","log","returnedPerson","catch","err","setTimeout","concat","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06a9aaa9.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = 'http://localhost:3001/api/entries'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newPerson) => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, modifiedPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, modifiedPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst peopleService = {getAll, create, update, deletePerson}\r\nexport default peopleService","import React from \"react\"\r\n\r\nconst SuccessNotification = ({message}) => {\r\n    if(message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className='success'>\r\n            {message}\r\n        </div>\r\n    )\r\n} \r\n\r\nconst ErrorNotification = ({message}) => {\r\n    if(message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className='error'>\r\n            {message}\r\n        </div>\r\n    )\r\n} \r\n\r\nexport {\r\n    SuccessNotification,\r\n    ErrorNotification\r\n}","import {React, useState, useEffect} from \"react\"\nimport peopleService from './services/people'\nimport { SuccessNotification, ErrorNotification } from \"./components/Notification\"\n\nconst InformationForm = ({addNewPerson, newName, newPhone, handleNameChange, handlePhoneChange}) => {\n  return(\n    <>\n      <h2>New entry:</h2>\n      <form onSubmit={addNewPerson}>\n        <div>\n          <p>Name:</p>\n          <input value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n          <p>Phone:</p>\n          <input value={newPhone} onChange={handlePhoneChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">Add</button>\n        </div>\n      </form>\n    </>\n  )\n}\n\nconst Entry = ({person, deleteEntry}) => {\n  return(\n    <li key={person.id}>\n      <p>{person.name} -- {person.number}</p>\n      <button onClick={() => deleteEntry(person.id)}>Delete</button>\n    </li>\n  )\n}\n\nconst InformationDisplay = ({people, setPeople}) => {\n  \n  const deleteEntry = (id) => {\n    const person = people.filter(person => person.id === id)\n    const confirmationResult = window.confirm(\"Are you sure you want to delete \", person[0].name)\n\n    if(confirmationResult){\n      peopleService\n      .deletePerson(id)\n      .then(response => {\n        setPeople(people.filter(person => person.id !== id))\n      })\n    }\n  }\n  \n  return( \n    <>\n      <h2>Numbers</h2>\n      <ul>\n        {people.map((person) => <Entry person={person} deleteEntry={() => deleteEntry(person.id)}/>)}\n      </ul>\n    </>\n  )\n}\n\nconst Search = ({handleSearchChange, searchResults}) => {\n  return(\n    <div>\n      <h2>Search:</h2>\n      <input onChange={handleSearchChange}/>\n      <ul>\n        {searchResults.map(result => <li key={result.id}>{result.name} -- {result.number}</li>)}\n      </ul>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [people, setPeople] = useState([])\n  const [ newName, setNewName] = useState('')\n  const [ newPhone, setNewPhone] = useState('')\n  const [ searchResults, setSearchResults] = useState([])\n  const [ successNotification, setSuccessNotification] = useState(null)\n  const [ errorNotification, setErrorNotification] = useState(null)\n\n  useEffect(() => {\n    peopleService\n      .getAll()\n      .then(allEntries => {\n        const people = allEntries.map(person => \n          ({\"id\":person.id, \"name\":person.name, \"number\":person.number})\n        )\n        setPeople(people)\n      }) \n  },[])\n\n  const addNewPerson = (event) => {\n    event.preventDefault()\n    \n    const newPerson = {id: people.length + 1, name: newName, number: newPhone}\n    const matchingPerson = people.find(person => newPerson.name === person.name)    \n\n    console.log(\"Match: \", matchingPerson)\n\n    if(!matchingPerson){\n      peopleService\n      .create(newPerson)\n      .then(returnedPerson => {\n        setPeople(people.concat(returnedPerson))\n        console.log(\"New People: \", people)\n        setNewName(\"\") \n        setNewPhone(\"\")\n        \n        setSuccessNotification(`Succesfully added ${returnedPerson.name}!`)\n        setTimeout(() => {\n          setSuccessNotification(null)\n        }, 5000)\n\n      })\n      .catch(error => {\n        // setErrorNotification(error.response.data)\n        setErrorNotification(\"Validation Error: The name has to have more than 3 characters and the phone number more than 8!\")\n        setTimeout(() => {\n          setErrorNotification(null)\n        }, 5000)\n      })\n\n    } else {\n      \n      const confirmationResult = window.confirm(`Do you want to change ${newPerson.name}'s number?'`)\n            \n      if(confirmationResult){\n        peopleService\n        .update(matchingPerson.id, newPerson)\n        .then(returnedPerson => {\n          setPeople(people.map(person => person.id === returnedPerson.id ? returnedPerson : person))          \n        })\n        .catch(err => {\n          setErrorNotification(`${matchingPerson.name}'s information has already been removed from the server!'`)\n          setTimeout(() => {\n            setErrorNotification(null)\n          }, 5000);\n        })\n      }\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    const search = event.target.value\n    if(search !== \"\"){\n      const searchResults = people.filter(person => person.name.toLowerCase().includes(search.toLowerCase()))\n      setSearchResults(searchResults)\n    }\n  }\n\n  return(\n    <div>\n      <h1>Phonebook</h1>\n      <SuccessNotification message={successNotification}/>\n      <ErrorNotification message={errorNotification}/>\n      <Search handleSearchChange={handleSearchChange} searchResults={searchResults}/>\n      <br></br>\n      <InformationForm addNewPerson={addNewPerson} newName={newName} newPhone={newPhone} handleNameChange={handleNameChange} handlePhoneChange={handlePhoneChange}/>\n      <br></br>\n      <InformationDisplay people={people} setPeople={setPeople}/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}